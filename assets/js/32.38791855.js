(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{533:function(o,_,e){"use strict";e.r(_);var v=e(6),s=Object(v.a)({},(function(){var o=this,_=o.$createElement,e=o._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h1",{attrs:{id:"cookie-与-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-与-session"}},[o._v("#")]),o._v(" "),e("code",[o._v("cookie")]),o._v(" 与 "),e("code",[o._v("session")])]),o._v(" "),e("h2",{attrs:{id:"一、http是一个无状态协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、http是一个无状态协议"}},[o._v("#")]),o._v(" 一、"),e("code",[o._v("http")]),o._v("是一个无状态协议")]),o._v(" "),e("p",[o._v("什么是无状态呢？就是说这一次请求和上一次请求是没有任何关系的，互不认识的，没有关联的。这种无状态的的好处是快速。坏处是假如我们想要把"),e("code",[o._v("www.zhihu.com/login.html")]),o._v("和"),e("code",[o._v("www.zhihu.com/index.html")]),o._v("关联起来，必须使用某些手段和工具")]),o._v(" "),e("h2",{attrs:{id:"二、cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、cookie"}},[o._v("#")]),o._v(" 二、cookie")]),o._v(" "),e("h3",{attrs:{id:"_2-1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-简介"}},[o._v("#")]),o._v(" 2.1 简介")]),o._v(" "),e("p",[o._v("浏览器在电脑硬盘中开辟的一块空间，主要供服务器端存储数据。“"),e("code",[o._v("Cookie")]),o._v("”是小量信息，由网络服务器发送出来以存储在网络浏览器上，从而下次这位独一无二的访客又回到该网络服务器时，可从该浏览器读回此信息。这是很有用的，让浏览器记住这位访客的特定信息，如上次访问的位置、花费的时间或用户首选项（如样式表）。"),e("code",[o._v("Cookie")]),o._v(" 是个存储在浏览器目录的文本文件，当浏览器运行时，存储在 RAM 中。一旦你从该网站或网络服务器退出，"),e("code",[o._v("Cookie")]),o._v("也可存储在计算机的硬驱上。"),e("strong",[e("code",[o._v("cookie")]),o._v("中的数据是以域名的形式进行区分的。")])]),o._v(" "),e("h3",{attrs:{id:"_2-2-生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-生命周期"}},[o._v("#")]),o._v(" 2.2 生命周期")]),o._v(" "),e("p",[e("code",[o._v("Cookie")]),o._v("在生成时就会被指定一个"),e("code",[o._v("Expire")]),o._v("值，这就是"),e("code",[o._v("Cookie")]),o._v("的生存周期，在这个周期内"),e("code",[o._v("Cookie")]),o._v("有效，超出周期"),e("code",[o._v("Cookie")]),o._v("就会被清除。有些页面将"),e("code",[o._v("Cookie")]),o._v("的生存周期设置为“0”或负值，这样在关闭浏览器时，就马上清除"),e("code",[o._v("Cookie")]),o._v("，不会记录用户信息，更加安全。")]),o._v(" "),e("h3",{attrs:{id:"_2-3-什么时候产生"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-什么时候产生"}},[o._v("#")]),o._v(" 2.3 什么时候产生")]),o._v(" "),e("p",[o._v("客户端向服务器端发送一个请求的时，服务端向客户端发送一个"),e("code",[o._v("Cookie")]),o._v(" 然后浏览器将"),e("code",[o._v("Cookie")]),o._v("保存，"),e("code",[o._v("Cookie")]),o._v("有两种保存方式，一种是浏览器会将"),e("code",[o._v("Cookie")]),o._v("保存在内存中，还有一种是保存在客户端的硬盘中，之后每次HTTP请求浏览器都会将"),e("code",[o._v("Cookie")]),o._v("发送给服务器端。"),e("strong",[e("code",[o._v("cookie")]),o._v("中的数据会随着请求被自动发送到服务器端。")])]),o._v(" "),e("h3",{attrs:{id:"_2-4-缺陷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-缺陷"}},[o._v("#")]),o._v(" 2.4 缺陷")]),o._v(" "),e("p",[o._v("1、数量受到限制。一个浏览器能创建的 "),e("code",[o._v("Cookie")]),o._v(" 数量最多为 300 个，并且每个不能超过 4KB，每个 Web 站点能设置的 "),e("code",[o._v("Cookie")]),o._v("总数不能超过 20 个")]),o._v(" "),e("p",[o._v("2、安全性无法得到保障。通常跨站点脚本攻击往往利用网站漏洞在网站页面中植入脚本代码或网站页面引用第三方法脚本代码，均存在跨站点脚本攻击的可能，在受到跨站点脚本攻击时，脚本指令将会读取当前站点的所有 Cookie 内容（已不存在 Cookie 作用域限制），然后通过某种方式将 "),e("code",[o._v("Cookie")]),o._v(" 内容提交到指定的服务器（如：AJAX）。一旦 Cookie 落入攻击者手中，它将会重现其价值。")]),o._v(" "),e("p",[o._v("3、浏览器可以禁用"),e("code",[o._v("Cookie")]),o._v("，禁用"),e("code",[o._v("Cookie")]),o._v("后，也就无法享有"),e("code",[o._v("Cookie")]),o._v("带来的方便。")]),o._v(" "),e("h2",{attrs:{id:"三、session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、session"}},[o._v("#")]),o._v(" 三、session")]),o._v(" "),e("h3",{attrs:{id:"_3-1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-简介"}},[o._v("#")]),o._v(" 3.1 简介")]),o._v(" "),e("p",[o._v("在计算机中，尤其是在网络应用中，称为“会话控制”。"),e("code",[o._v("Session")]),o._v(" 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 "),e("code",[o._v("Session")]),o._v("对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 "),e("code",[o._v("Session")]),o._v(" 对象。当会话过期或被放弃后，服务器将终止该会话。实际上"),e("code",[o._v("session")]),o._v("就是一个对象，存储在服务器端的内存中，在"),e("code",[o._v("session")]),o._v("对象中也可以存储多条数据，每一条数据都有一个"),e("code",[o._v("sessionid")]),o._v("做为唯一标识。")]),o._v(" "),e("h3",{attrs:{id:"_3-2-为什么要用session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-为什么要用session"}},[o._v("#")]),o._v(" 3.2 为什么要用session")]),o._v(" "),e("p",[o._v("因为很多第三方可以获取到这个"),e("code",[o._v("Cookie")]),o._v("，服务器无法判断"),e("code",[o._v("Cookie")]),o._v("是不是真实用户发送的，所以"),e("code",[o._v("Cookie")]),o._v("可以伪造，伪造"),e("code",[o._v("Cookie")]),o._v("实现登录进行一些HTTP请求。如果从安全性上来讲，"),e("code",[o._v("Session")]),o._v("比"),e("code",[o._v("Cookie")]),o._v("安全性稍微高一些，我们先要知道一个概念--"),e("code",[o._v("SessionID")]),o._v("。"),e("code",[o._v("SessionID")]),o._v("是什么？客户端第一次请求服务器的时候，服务器会为客户端创建一个"),e("code",[o._v("Session")]),o._v("，并将通过特殊算法算出一个"),e("code",[o._v("session")]),o._v("的"),e("code",[o._v("ID")]),o._v("，下次请求资源时（"),e("code",[o._v("Session")]),o._v("未过期），浏览器会将"),e("code",[o._v("sessionID")]),o._v("(实质是"),e("code",[o._v("Cookie")]),o._v(")放置到请求头中，服务器接收到请求后就得到该请求的"),e("code",[o._v("SessionID")]),o._v("，服务器找到该id的"),e("code",[o._v("session")]),o._v("返还给请求者使用。")]),o._v(" "),e("h3",{attrs:{id:"_3-3-缺陷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-缺陷"}},[o._v("#")]),o._v(" 3.3 缺陷")]),o._v(" "),e("p",[o._v("因为"),e("code",[o._v("Session")]),o._v("是存储在服务器当中的，所以"),e("code",[o._v("Session")]),o._v("过多，会对服务器产生压力。")]),o._v(" "),e("h2",{attrs:{id:"四、cookie与session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、cookie与session"}},[o._v("#")]),o._v(" 四、cookie与session")]),o._v(" "),e("p",[o._v("由于"),e("code",[o._v("http")]),o._v("的无状态性，为了使某个域名下的所有网页能够共享某些数据，"),e("code",[o._v("session")]),o._v("和"),e("code",[o._v("cookie")]),o._v("出现了。客户端访问服务器的流程如下")]),o._v(" "),e("ul",[e("li",[o._v("首先，客户端会发送一个"),e("code",[o._v("http")]),o._v("请求到服务器端。")]),o._v(" "),e("li",[o._v("服务器端接受客户端请求后，建立一个"),e("code",[o._v("session")]),o._v("，并发送一个"),e("code",[o._v("http")]),o._v("响应到客户端，这个响应头，其中就包含"),e("code",[o._v("Set-Cookie")]),o._v("头部。")]),o._v(" "),e("li",[o._v("在客户端发起的第二次请求，假如服务器给了"),e("code",[o._v("set-Cookie")]),o._v("，浏览器会自动在请求头中添加"),e("code",[o._v("cookie")])]),o._v(" "),e("li",[o._v("服务器接收请求，分解"),e("code",[o._v("cookie")]),o._v("，验证信息，核对成功后返回"),e("code",[o._v("response")]),o._v("给客户端")])]),o._v(" "),e("h2",{attrs:{id:"注意"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[o._v("#")]),o._v(" 注意")]),o._v(" "),e("ul",[e("li",[e("code",[o._v("cookie")]),o._v("只是实现"),e("code",[o._v("session")]),o._v("的其中一种方案。虽然是最常用的，但并不是唯一的方法。禁用"),e("code",[o._v("cookie")]),o._v("后还有其他方法存储，比如放在"),e("code",[o._v("url")]),o._v("中")]),o._v(" "),e("li",[o._v("现在大多都是"),e("code",[o._v("Session + Cookie")]),o._v("，但是只用"),e("code",[o._v("session")]),o._v("不用"),e("code",[o._v("cookie")]),o._v("，或是只用"),e("code",[o._v("cookie")]),o._v("，不用"),e("code",[o._v("session")]),o._v("在理论上都可以保持会话状态。可是实际中因为多种原因，一般不会单独使用")]),o._v(" "),e("li",[o._v("用"),e("code",[o._v("session")]),o._v("只需要在客户端保存一个"),e("code",[o._v("id")]),o._v("，实际上大量数据都是保存在服务端。如果全部用"),e("code",[o._v("cookie")]),o._v("，数据量大的时候客户端是没有那么多空间的。")]),o._v(" "),e("li",[o._v("如果只用"),e("code",[o._v("cookie")]),o._v("不用"),e("code",[o._v("session")]),o._v("，那么账户信息全部保存在客户端，一旦被劫持，全部信息都会泄露。并且客户端数据量变大，网络传输的数据量也会变大")])]),o._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[o._v("#")]),o._v(" 小结")]),o._v(" "),e("p",[e("strong",[o._v("简而言之, session 有如用户信息档案表, 里面包含了用户的认证信息和登录状态等信息. 而 cookie 就是用户通行证")])])])}),[],!1,null,null,null);_.default=s.exports}}]);